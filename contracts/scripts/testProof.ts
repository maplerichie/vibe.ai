import { ethers } from "hardhat";
import { hashEndpointWithScope } from "@selfxyz/core";

async function main() {
  const [deployer] = await ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);

  const vibe = await ethers.getContractAt(
    "Vibe",
    "0xCA757b46f68407EEb3529e5d308846dAf7415F95"
  );

  const vibeVerifier = await ethers.getContractAt(
    "VibeVerifier",
    "0xf0192BdCbCf20fFfc868dDED247855fde8a2b0BF"
  );

  const tx = {
    from: await deployer.getAddress(),
    to: "0xf0192BdCbCf20fFfc868dDED247855fde8a2b0BF",
    data: "0xfdc609671602f815da3670d1eb653085841e89693921f844216697311b9066254e71bfa2225ecfa14a3703d2a44aaf4ec216812e5c07a826d010671555287f602413f70d1a18a869a672fd404170c7027fc04f9f5ca3ac3ccc05be4bfb2a7b5531c4ea4219ae3d5352f1e7b89273ee1c82db09759d5eb1339a5c8c0095d7af91993ae32d1b3aabd5f9954f1ea13f8b4fe0bbad24a1410fbef8380ea51103388a166fb1b91e9bd30c3f945d8e54e540ea8f53baedbbcdc6648c2e3842fca50f4ebad4836426f2e5d9712a5319943d1e234643314e9cd86df1ad768035d2743919b954c2a924f1768e32e6325d62c4de94ab149729cd48a5816934cfe0e2c04d00b6dae8da003c3c3c3c3c3c3c3c3c3c3c3c3c45454b3c4b494c3c474e4f48430000000000000000000000000000000000000000000000003c3c3c3c3c3c3c3c3c3c3c3c3c0000000038310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a251bb3b1cb4110bc74d6776d9197715d3bb492fd7d04d8919c675c9e230e600000000000000000000000000000000000000000000000000000000000000010055af9fbd738d6d464e53d95140bfdf22dffdf0f0a2f456a91d35631707eb4800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000526616310595cfa8ab2797cdfd554970601bbfd0ccdfb9758abf869b4301c6da81067a3b25dc3934c48bb175a4fcd87e80c8c66e14fa4bf85d2f38ea04746596c25390a7c15224a16dd42cebd7065d170342adc67015dfc7c7cb809839d5d04331a77c661aa5660e0c5dff3c989ecb8439c6ff4e6664b1328d7fd6de40658b91a00000000000000000000000048f206950c4028d79ff2b3cb3f8fc57bd92622b6",
    // Add these if needed based on your requirements:
    // value: ethers.utils.parseEther('0.0'), // Amount of ETH to send
    gasLimit: 3000000, // Gas limit
    // gasPrice: await provider.getGasPrice() // Current gas price
  };

  console.log("Sending transaction...");
  const sendTx = await deployer.sendTransaction(tx);

  // Wait for transaction to be mined
  console.log("Transaction sent! Hash:", sendTx.hash);
  console.log("Waiting for confirmation...");

  const receipt = await sendTx.wait();
  console.log("Transaction confirmed in block:", receipt);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
